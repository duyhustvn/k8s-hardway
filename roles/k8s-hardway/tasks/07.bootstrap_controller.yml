- block: # Install k8s controller binaries
    - name: Copy k8s control plane binaries to master
      copy:
        src: "k8s_components/controller/{{ item }}"
        dest: "/usr/local/bin"
        owner: "root"
        group: "root"
        mode: "0500"
      loop:
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler

    - name: Copy kubectl to master
      copy:
        src: "k8s_components/kubectl"
        dest: "/usr/local/bin"
        owner: "root"
        group: "root"
        mode: "0500"

- block: # Config k8s API server
    - name: Create k8s lib directory
      file:
        path: "/var/lib/kubernetes"
        state: "directory"
        owner: "root"
        group: "root"
        mode: "0700"

    - name: Copy k8s cert
      copy:
        src: "certs/{{ item }}"
        dest: "/var/lib/kubernetes"
        owner: "root"
        group: "root"
        mode: "0700"
      loop:
        - ca.crt
        - ca.key
        - kube-api-server.key
        - kube-api-server.crt
        - service-accounts.key
        - service-accounts.crt

    - name: Copy kube-apiserver.service unit to master
      copy:
        src: "units/{{ item }}"
        dest: "/etc/systemd/system/"
        owner: "root"
        group: "root"
        mode: "0600"
      loop:
        - kube-apiserver.service

- block: # Config k8s controller manager
    - name: Copy kube-controller-manager.kubeconfig to master
      copy:
        src: "certs/kube-controller-manager.kubeconfig"
        dest: "/var/lib/kubernetes"
        owner: "root"
        group: "root"
        mode: "0700"

    - name: Copy kube-controller-manager.service unit to master
      copy:
        src: "units/{{ item }}"
        dest: "/etc/systemd/system/"
        owner: "root"
        group: "root"
        mode: "0600"
      loop:
        - kube-controller-manager.service

- block: # Config k8s scheduler
    - name: Create k8s configuration directory
      file:
        path: "/etc/kubernetes/config"
        state: "directory"
        owner: "root"
        group: "root"
        mode: "0700"

    - name: Copy kube-scheduler.kubeconfig to master
      copy:
        src: "certs/kube-scheduler.kubeconfig"
        dest: "/var/lib/kubernetes"
        owner: "root"
        group: "root"
        mode: "0700"

    - name: Copy kube-scheduler.service unit to master
      copy:
        src: "units/{{ item }}"
        dest: "/etc/systemd/system/"
        owner: "root"
        group: "root"
        mode: "0600"
      loop:
        - kube-scheduler.service
      
    - name: Copy kube-scheduler.yaml to master
      copy:
        src: "kube-scheduler.yaml"
        dest: "/etc/kubernetes/config"
        owner: "root"
        group: "root"
        mode: "0700"

- block:
    - name: Start the controller 
      systemd:
        name: "{{ item}}"
        state: "started"
        enabled: true
      loop:
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler

- block: 
    - name: Check k8s API server
      uri:
        url: "https://127.0.0.1:6443/version"
        method: "GET"
        validate_certs: false
        return_content: true
        status_code: 200
      register: result
      until: result.status == 200
      retries: 5
      delay: 5

    - name: Print k8s API server version
      debug:
        var: result.json

- block: # Config rbac
    - name: Copy admin.kubeconfig
      copy:
        src: "certs/admin.kubeconfig"
        dest: "/var/lib/kubernetes"
        owner: "root"
        group: "root"
        mode: "0700"
  
    - name: Copy k8s kube-apiserver-to-kubelet
      copy:
        src: "kube-apiserver-to-kubelet.yaml"
        dest: "/var/lib/kubernetes/kube-apiserver-to-kubelet.yaml"
        owner: "root"
        group: "root"
        mode: "0700"
    
    - name: Create rbac
      command: "kubectl apply -f kube-apiserver-to-kubelet.yaml --kubeconfig admin.kubeconfig"
      args:
        chdir: "/var/lib/kubernetes"
      register: result

    - name: Print result
      debug:
        var: result.stdout_lines