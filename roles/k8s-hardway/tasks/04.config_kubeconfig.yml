- block:
  - name: Generate kubeconfig file for worker node
    delegate_to: localhost
    become: false
    shell: |
      echo "Set cluster"
      kubectl config set-cluster kubernetes-the-hard-way \
        --certificate-authority=ca.crt \
        --embed-certs=true \
        --server=https://server.kubernetes.local:6443 \
        --kubeconfig={{ alias }}.kubeconfig

      echo "Set credentials"
      kubectl config set-credentials system:node:${host} \
        --client-certificate={{ alias }}.crt \
        --client-key={{ alias }}.key \
        --embed-certs=true \
        --kubeconfig={{ alias }}.kubeconfig

      echo "Set context"
      kubectl config set-context default \
        --cluster=kubernetes-the-hard-way \
        --user=system:node:{{ alias }} \
        --kubeconfig={{ alias }}.kubeconfig
    args:
      chdir: "{{ role_path }}/files/certs"
  when: inventory_hostname in groups['k8s-worker']
    
- block:
  - name: Generate kubeconfig file for kube-proxy
    delegate_to: localhost
    run_once: true
    become: false
    shell: |
      kubectl config set-cluster kubernetes-the-hard-way \
        --certificate-authority=ca.crt \
        --embed-certs=true \
        --server=https://server.kubernetes.local:6443 \
        --kubeconfig=kube-proxy.kubeconfig

      kubectl config set-credentials system:kube-proxy \
        --client-certificate=kube-proxy.crt \
        --client-key=kube-proxy.key \
        --embed-certs=true \
        --kubeconfig=kube-proxy.kubeconfig

      kubectl config set-context default \
        --cluster=kubernetes-the-hard-way \
        --user=system:kube-proxy \
        --kubeconfig=kube-proxy.kubeconfig

      kubectl config use-context default \
        --kubeconfig=kube-proxy.kubeconfig
    args:
      chdir: "{{ role_path }}/files/certs"

- block:
  - name: Generate kubeconfig file for kube-controller-manager
    delegate_to: localhost
    run_once: true
    become: false
    shell: |
      kubectl config set-cluster kubernetes-the-hard-way \
        --certificate-authority=ca.crt \
        --embed-certs=true \
        --server=https://server.kubernetes.local:6443 \
        --kubeconfig=kube-controller-manager.kubeconfig

      kubectl config set-credentials system:kube-controller-manager \
        --client-certificate=kube-controller-manager.crt \
        --client-key=kube-controller-manager.key \
        --embed-certs=true \
        --kubeconfig=kube-controller-manager.kubeconfig

      kubectl config set-context default \
        --cluster=kubernetes-the-hard-way \
        --user=system:kube-controller-manager \
        --kubeconfig=kube-controller-manager.kubeconfig

      kubectl config use-context default \
        --kubeconfig=kube-controller-manager.kubeconfig
    args:
      chdir: "{{ role_path }}/files/certs"

- block:
  - name: Generate kubeconfig file for kube-scheduler
    delegate_to: localhost
    run_once: true
    become: false
    shell: |
      kubectl config set-cluster kubernetes-the-hard-way \
        --certificate-authority=ca.crt \
        --embed-certs=true \
        --server=https://server.kubernetes.local:6443 \
        --kubeconfig=kube-scheduler.kubeconfig

      kubectl config set-credentials system:kube-scheduler \
        --client-certificate=kube-scheduler.crt \
        --client-key=kube-scheduler.key \
        --embed-certs=true \
        --kubeconfig=kube-scheduler.kubeconfig

      kubectl config set-context default \
        --cluster=kubernetes-the-hard-way \
        --user=system:kube-scheduler \
        --kubeconfig=kube-scheduler.kubeconfig

      kubectl config use-context default \
        --kubeconfig=kube-scheduler.kubeconfig
    args:
      chdir: "{{ role_path }}/files/certs"

- block:
  - name: Generate kubeconfig file for admin user
    delegate_to: localhost
    run_once: true
    become: false
    shell: |
      kubectl config set-cluster kubernetes-the-hard-way \
        --certificate-authority=ca.crt \
        --embed-certs=true \
        --server=https://127.0.0.1:6443 \
        --kubeconfig=admin.kubeconfig

      kubectl config set-credentials admin \
        --client-certificate=admin.crt \
        --client-key=admin.key \
        --embed-certs=true \
        --kubeconfig=admin.kubeconfig

      kubectl config set-context default \
        --cluster=kubernetes-the-hard-way \
        --user=admin \
        --kubeconfig=admin.kubeconfig

      kubectl config use-context default \
        --kubeconfig=admin.kubeconfig
    args:
      chdir: "{{ role_path }}/files/certs"

- block:
  - name: Create {{ item }} directory
    file:
      path: "/var/lib/{{ item }}"
      state: "directory"
    loop: 
      - kubelet
      - kube-proxy
  - name: Copy kube-proxy kubeconfig files to worker node
    copy:
      src: "certs/kube-proxy.kubeconfig"
      dest: "/var/lib/kube-proxy/kubeconfig"
  - name: Copy kubelet kubeconfig files to worker node
    copy:
      src: "certs/{{ alias }}.kubeconfig"
      dest: "/var/lib/kubelet/kubeconfig"
  when: inventory_hostname in groups['k8s-worker']

- block:
  - name: Copy kubeconfig to k8s master
    copy:
      src: "{{ role_path }}/files/certs/{{ item }}.kubeconfig"
      dest: "/tmp"
    loop:
      - admin
      - kube-controller-manager
      - kube-scheduler
  when: inventory_hostname in groups['k8s-master']
